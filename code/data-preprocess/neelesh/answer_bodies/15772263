<p>What about something like this:</p>

<p>First resample the data frame into 1D intervals.  This takes the mean of the values for all duplicate days.  Use the <code>fill_method</code> option to fill in missing date values.  Next, pass the resampled frame into <code>pd.rolling_mean</code> with a window of 3 and min_periods=1 :</p>

<pre><code>pd.rolling_mean(df.resample("1D", fill_method="ffill"), window=3, min_periods=1)

            favorable  unfavorable     other
enddate
2012-10-25   0.495000     0.485000  0.025000
2012-10-26   0.527500     0.442500  0.032500
2012-10-27   0.521667     0.451667  0.028333
2012-10-28   0.515833     0.450000  0.035833
2012-10-29   0.488333     0.476667  0.038333
2012-10-30   0.495000     0.470000  0.038333
2012-10-31   0.512500     0.460000  0.029167
2012-11-01   0.516667     0.456667  0.026667
2012-11-02   0.503333     0.463333  0.033333
2012-11-03   0.490000     0.463333  0.046667
2012-11-04   0.494000     0.456000  0.043333
2012-11-05   0.500667     0.452667  0.036667
2012-11-06   0.507333     0.456000  0.023333
2012-11-07   0.510000     0.443333  0.013333
</code></pre>

<p><strong>UPDATE</strong>: As Ben points out in the comments, <a href="http://pandas.pydata.org/pandas-docs/stable/computation.html#window-functions">with pandas 0.18.0 the syntax has changed</a>.  With the new syntax this would be:</p>

<pre class="lang-py prettyprint-override"><code>df.resample("1d").sum().fillna(0).rolling(window=3, min_periods=1).mean()
</code></pre>
